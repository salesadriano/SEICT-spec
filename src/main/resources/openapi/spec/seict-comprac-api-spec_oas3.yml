openapi: 3.0.3
x-json-schema-faker:
  maxItems: 3
info:
  title: SEICT - COMPRAC
  description: |
    API Backend para applicação SEICT - COMPRAC.
  termsOfService: https://www.lampp-it.com.br/
  contact:
    name: Lampp-it
    url: https://www.lampp-it.com.br/
    email: contato@lampp-it.com.br
  license:
    name: Lampp-it - Licensa Comercial
    url: https://www.lampp-it.com.br/
  version: 0.0.16
externalDocs:
  description: SEICT - COMPRAC - Documentação
  url: https://comprac.ac.gov.br/
servers:
  - url: "{protocol}://{devServerHost}:{devServerPort}/api/seict-comprac/v1"
    description: development instance
    variables:
      protocol:
        description: a
        default: https
        enum:
          - https
          - http
      devServerHost:
        description: host name of the development server
        default: localhost
        enum:
          - localhost
          # add other hosts here
      devServerPort:
        description: host port of the api service is running
        default: "4070"
        enum:
          - "4070"
          - "8080"
          # add other ports here
tags:
  - name: Back Office - Edital
    description: Management of Editals
  - name: Security - Groups
    description: Management of Groups.
  - name: Security - Permissions
    description: Management of Permissions.
  - name: Security - User
    description: Management of Users.
paths:
  /security/user/query:
    post:
      tags:
        - Security - User
      summary: todo
      description: todo
      operationId: queryUser
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryRequest"
            examples:
              queryById:
                $ref: "#/components/examples/UserQueryRequestById"
              # queryByName:
              #   $ref: "#/components/examples/UserQueryRequestByName"
              # queryByEmail:
              #   $ref: "#/components/examples/UserQueryRequestByEmail"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserQueryResponse"
              examples:
                zeroResults:
                  $ref: "#/components/examples/UserQueryResponseWithoutResults"
                withResults:
                  $ref: "#/components/examples/UserQueryResponseWithResults"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
  /security/user:
    post:
      tags:
        - Security - User
      summary: todo
      description: todo
      operationId: createUser
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
            examples:
              userByNumber:
                $ref: "#/components/examples/UserRequestByNumber"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
  /security/user/{id}:
    put:
      tags:
        - Security - User
      summary: todo
      description: todo
      operationId: updateUser
      parameters:
        - $ref: "#/components/parameters/UserIdParam"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - Security - User
      summary: todo
      description: todo
      operationId: deleteUser
      parameters:
        - $ref: "#/components/parameters/UserIdParam"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
  /backoffice/edital/query:
    post:
      tags:
        - "Back Office - Edital"
      summary: todo
      description: todo
      operationId: queryEdital
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryRequest"
            examples:
              queryByNumber:
                $ref: "#/components/examples/EditalQueryRequestByNumber"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditalQueryResponse"
              examples:
                zeroResults:
                  $ref: "#/components/examples/EditalQueryResponseWithoutResults"
                withResults:
                  $ref: "#/components/examples/EditalQueryResponseWithResults"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
  /backoffice/edital:
    post:
      tags:
        - "Back Office - Edital"
      summary: todo
      description: todo
      operationId: createEdital
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditalRequest"
            examples:
              queryByNumber:
                $ref: "#/components/examples/EditalRequestByNumber"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditalResponse"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
  /backoffice/edital/{id}:
    get:
      tags:
        - "Back Office - Edital"
      summary: todo
      description: todo
      operationId: getEditalById
      parameters:
        - $ref: "#/components/parameters/EditalIdParam"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditalResponse"
              examples:
                queryByNumber:
                  $ref: "#/components/examples/EditalResponseById"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - "Back Office - Edital"
      summary: todo
      description: todo
      operationId: updateEdital
      parameters:
        - $ref: "#/components/parameters/EditalIdParam"
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditalRequest"
            # examples:
            #   queryByNumber:
            #     $ref: "#/components/examples/EditalRequestByNumber"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditalResponse"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - "Back Office - Edital"
      summary: todo
      description: todo
      operationId: deleteEdital
      parameters:
        - $ref: "#/components/parameters/EditalIdParam"
      responses:
        "204":
          description: Successful operation. No content.
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - "Back Office - Edital"
      summary: todo
      description: todo
      operationId: patchEdital
      parameters:
        - $ref: "#/components/parameters/EditalIdParam"
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditalPatchRequest"
      responses:
        "204":
          description: Successful operation. No Content.
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        default:
          $ref: "#/components/responses/GeneralError"
components:
  schemas:
    ##
    # Problems
    ##
    Problem:
      description: todo.
      type: object
      properties:
        type:
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          type: string
          format: uri
          minLength: 10
          maxLength: 2147483647
          default: "about:blank"
          example: "https://lampp-it/problem/constraint-violation"
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          type: string
          minLength: 1
          maxLength: 2147483647
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          type: integer
          format: int32
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          type: string
          minLength: 1
          maxLength: 2147483647
          example: Connection to database timed out
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          type: string
          format: uri
          minLength: 1
          maxLength: 2147483647
    ##
    # Ids
    ##
    IdAsUUID:
      description: todo
      type: string
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      minLength: 36
      maxLength: 36
    ##
    # Query
    ##
    QuerySortItem:
      description: todo
      properties:
        key:
          type: string
          pattern: "^([a-zA-Z0-9_]){1,128}$"
          nullable: false
          minLength: 1
          maxLength: 128
        value:
          type: string
          enum: [ASC, DESC]
          nullable: false
          default: "ASC"
      required:
        - key
        - value
    ##
    # Query Request
    ##
    QueryRequest:
      description: todo
      type: object
      properties:
        filter:
          type: array
          items:
            $ref: "#/components/schemas/QueryRequestFilterItem"
          minItems: 0
          maxItems: 2147483647
        pagination:
          $ref: "#/components/schemas/QueryRequestPagination"
        sort:
          $ref: "#/components/schemas/QueryRequestSort"
    QueryRequestFilterItem:
      description: todo
      properties:
        key:
          type: string
          pattern: "^([a-zA-Z0-9_]){1,64}$"
          nullable: false
          minLength: 1
          maxLength: 64
        value:
          type: string
          pattern: '^[a-zA-Z0-9À-ÿ\s/\\_\,]{1,2048}$'
          nullable: false
          minLength: 1
          maxLength: 2048
        operator:
          type: string
          enum: [EQ, GT, GTE, LT, LTE, IN, NOT_IN, IN_LIKE, NOT_IN_LIKE]
          default: "EQ"
      required:
        - key
        - value
    QueryRequestPagination:
      description: todo
      properties:
        pageNumber:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
          default: 0
        pageSize:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          default: 10
      required:
        - pageNumber
        - pageSize
    QueryRequestSort:
      description: todo
      type: array
      items:
        $ref: "#/components/schemas/QuerySortItem"
      minItems: 0
      maxItems: 2147483647
    ##
    # Query Response
    ##
    BaseQueryResponse:
      description: todo
      type: object
      x-parent: abstract
      properties:
        pagination:
          $ref: "#/components/schemas/QueryResponsePagination"
      required:
        - pagination
    QueryResponsePagination:
      description: todo
      allOf:
        - $ref: "#/components/schemas/QueryRequestPagination"
        - type: object
          properties:
            totalCount:
              type: integer
              format: int64
              minimum: 0
              maximum: 9223372036854775807
              nullable: false
            resultSize:
              type: integer
              format: int32
              minimum: 0
              maximum: 2147483647
              nullable: false
          required:
            - totalCount
            - resultSize
    ##
    # User
    ##
    UserId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: true
    UserQueryResponse:
      description: todo
      allOf:
        - $ref: "#/components/schemas/BaseQueryResponse"
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: "#/components/schemas/UserQueryResult"
              minItems: 0
              maxItems: 2147483647
          required:
            - results
            - pagination
            - sort
    UserQueryResult:
      description: todo
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: false
          minimum: 1
          maximum: 9223372036854775807
    UserRequest:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
        name:
          type: string
          format: uuid
          nullable: false
          minLength: 2
          maxLength: 128
        email:
          type: string
          format: email
          nullable: false
          minLength: 5
          maxLength: 128
      required:
        - name
        - email
    UserResponse:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
        name:
          type: string
          format: uuid
          nullable: false
          minLength: 2
          maxLength: 128
        email:
          type: string
          format: email
          nullable: false
          minLength: 5
          maxLength: 128
      required:
        - id
        - name
        - email
    ##
    # Geolocation
    ##
    CountryId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: false
    Country:
      description: todo.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/CountryId"
        name:
          type: string
          nullable: false
          minLength: 2
          maxLength: 64
        states:
          type: array
          items:
            $ref: "#/components/schemas/State"
          nullable: false
          minItems: 1
          maxItems: 2147483647
      required:
        - name
        - states
    Geolocation: 
      description: todo.
      type: object
      properties:
        id: 
          $ref: "#/components/schemas/IdAsUUID"
        type: 
          $ref: "#/components/schemas/GeolocationType"
      required:
        - id
        - type
    GeolocationType: 
      description: todo.
      type: string
      enum:
        - COUNTRY
        - STATE
        - REGION
        - COUNTY
    StateId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: false
    State:
      description: todo.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/StateId"
        name:
          type: string
          nullable: false
          minLength: 2
          maxLength: 128
        countryId:
          $ref: "#/components/schemas/CountryId"
          nullable: false
        regions:
          type: array
          items:
            $ref: "#/components/schemas/Region"
          nullable: false
          minItems: 1
          maxItems: 2147483647
      required:
        - name
        - country
        - regions
    RegionId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: false
    Region:
      description: todo.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/RegionId"
        name:
          type: string
          nullable: false
          minLength: 2
          maxLength: 128
        stateId:
          $ref: "#/components/schemas/StateId"
          nullable: false
        counties:
          type: array
          items:
            $ref: "#/components/schemas/County"
          nullable: false
          minItems: 1
          maxItems: 2147483647
      required:
        - name
        - state
        - counties
    CountyId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: false
    County:
      description: todo.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/CountyId"
        name:
          type: string
          nullable: false
          minLength: 2
          maxLength: 128
        regionId:
          $ref: "#/components/schemas/RegionId"
          nullable: false
      required:
        - name
        - region
    ##
    # Itens de domínio
    ##
    IndustrialSectorId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: false
    IndustrialSector:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IndustrialSectorId"
          nullable: false
        name:
          type: string
          nullable: false
          pattern: '^([a-zA-ZÀ-ÿ0-9\s]){1,128}$'
          minLength: 1
          maxLength: 128
      required:
        - id
        - name
    DistributionCriteriaId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: false
    DistributionCriteria:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/DistributionCriteriaId"
          nullable: true
        description:
          type: string
          nullable: false
          pattern: '^([a-zA-ZÀ-ÿ0-9#$%&@\*\(\)\[\]\{\}\-+_=\:;,\.\\\/<>\?\!]){1,2048}$'
          minLength: 10
          maxLength: 2048
      required:
        - description
    ##
    # Edital
    ##
    # Edital - Enums
    EditalQueryKeys:
      description: todo.
      type: string
      enum:
        - EDITAL_NUMBER
        - EDITAL_VALIDITY_START
        - EDITAL_VALIDITY_END
        - EDITAL_STATUS
        - EDITAL_INDUSTRIAL_SECTOR_NAME
    EditalValueCriteriaTypes:
      description: todo.
      type: string
      enum:
        - SINGLE
        - MULTIPLE
    EditalLotTypes:
      description: todo.
      type: string
      enum:
        - SINGLE
        - MULTIPLE
    EditalStatus:
      description: todo
      type: string
      enum:
        - ATIVO
        - SUSPENSO
        - ENCERRADO
        - PRORROGADO
        - NOVO
    EditalEntityKeys:
      description: todo.
      type: string
      enum:
        - EDITAL_HEADER
        - EDITAL_GENERAL_INFO
        - EDITAL_LOTS
        - EDITAL_VALUE_CRITERIA
        - EDITAL_DISTRIBUTION_CRITERIA
        - EDITAL_ACCREDITATION_CRITERIA
        - EDITAL_ITEMS
    # Edital - Ids
    EditalId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: false
    EditalLotDescriptorId:
      description: todo
      $ref: "#/components/schemas/IdAsUUID"
      nullable: false
    # Edital - Schemas
    EditalHeader:
      description: todo.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IdAsUUID"
        editalNumber:
          type: string
          nullable: false
          minLength: 6
          maxLength: 256
          pattern: "^[0-9]{1,}/[0-9]{4}$"
        validityStartDate:
          type: string
          nullable: false
          minLength: 10
          maxLength: 10
          pattern: '^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$'
        validityEndDate:
          type: string
          nullable: false
          minLength: 10
          maxLength: 10
          pattern: '^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$'
        industrialSectorId:
          $ref: "#/components/schemas/IndustrialSectorId"
        status:
          $ref: "#/components/schemas/EditalStatusDefinition"
      required:
        - editalNumber
        - validityStartDate
        - validityEndDate
        - industrialSectorId
        - status
    EditalGeneralInformation:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IdAsUUID"
        publishDate:
          type: string
          nullable: false
          minLength: 10
          maxLength: 10
          pattern: '^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$'
        officialJournalNumber:
          type: integer
          format: int64
          nullable: true
          minimum: 1
          maximum: 9223372036854775807
        officialJournalDate:
          type: string
          nullable: true
          minLength: 10
          maxLength: 10
          pattern: '^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$'
        valueCriteriaType:
          $ref: "#/components/schemas/EditalValueCriteriaTypes"
        lotStrategy:
          $ref: "#/components/schemas/EditalLotTypes"
        purpose:
          type: string
          pattern: '^([a-zA-ZÀ-ÿ0-9\s#$%&@\*\(\)\[\]\{\}\-+_=\:;,\.\\\/<>\?\!]){1,8000}$'
          nullable: false
          minLength: 10
          maxLength: 8000
      required:
        - publishDate
        - officialJournalNumber
        - officialJournalDate
        - purpose
        - valueCriteriaType
        - lotStrategy
    EditalLotDescriptor:
      description: todo.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/EditalLotDescriptorId"
        number:
          type: integer
          format: int32
          nullable: false
          minimum: 1
          maximum: 2147483647
        description:
          type: string
          nullable: false
          pattern: '^([a-zA-ZÀ-ÿ0-9#$%&@\*\(\)\[\]\{\}\-+_=\:;,\.\\\/<>\?\!]){1,2048}$'
          minLength: 10
          maxLength: 2048
      required:
        - number
        - description
    EditalValueCriteriaDescriptor:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IdAsUUID"
        geolocation:
          $ref: "#/components/schemas/Geolocation"
          nullable: false
      required:
        - "geolocation"
    EditalItem:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IdAsUUID"
        number:
          type: integer
          format: int64
          nullable: false
          minimum: 1
          maximum: 9223372036854775807
        description:
          type: string
          nullable: false
          pattern: '^([a-zA-ZÀ-ÿ0-9#$%&@\*\(\)\[\]\{\}\-+_=\:;,\.\\\/<>\?\!]){1,2048}$'
          minLength: 10
          maxLength: 2048
        unit:
          type: string
          nullable: false
          pattern: '^([a-zA-ZÀ-ÿ0-9#$%&@\*\(\)\[\]\{\}\-+_=\:;,\.\\\/<>\?\!]){1,32}$'
          minLength: 1
          maxLength: 32
        technicalSpecification:
          type: string
          nullable: false
          pattern: '^([a-zA-ZÀ-ÿ0-9#$%&@\*\(\)\[\]\{\}\-+_=\:;,\.\\\/<>\?\!]){1,2048}$'
          minLength: 10
          maxLength: 2048
        lotDescriptorId:
          $ref: "#/components/schemas/EditalLotDescriptorId"
          nullable: false
        valueByGeolocation:
          type: array
          items:
            $ref: "#/components/schemas/EditalItemProposedValueByGeolocation"
          nullable: false
          minItems: 0
          maxItems: 2147483647
      required:
        - number
        - description
        - unit
        - technicalSpecification
        - lotDescriptorId
        - valueByGeolocation
    EditalItemProposedValueByGeolocation:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IdAsUUID"
        geolocation:
          $ref: "#/components/schemas/Geolocation"
          nullable: false
        proposedValue:
          type: number
          format: double
          nullable: false
          minimum: 0
      required:
        - geolocation
        - proposedValue
    EditalDistributionCriteriaDescriptor:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IdAsUUID"
        order:
          type: integer
          format: int32
          nullable: false
          minimum: 1
          maximum: 2147483647
        destributionCriteriaId:
          $ref: "#/components/schemas/DistributionCriteriaId"
      required:
        - order
        - destributionCriteriaId
    EditalAccreditationCriteriaDescriptor:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IdAsUUID"
        description:
          type: string
          nullable: false
          pattern: '^([a-zA-ZÀ-ÿ0-9#$%&@\*\(\)\[\]\{\}\-+_=\:;,\.\\\/<>\?\!]){1,2048}$'
          minLength: 10
          maxLength: 2048
      required:
        - description
    EditalStatusDefinition:
      description: todo
      type: object
      properties:
        previous:
          $ref: "#/components/schemas/EditalStatus"
          nullable: true
        current:
          $ref: "#/components/schemas/EditalStatus"
          nullable: false
      required:
        - previous
        - current
    # Edital - Request - Query
    EditalQueryResponse:
      description: todo
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseQueryResponse"
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: "#/components/schemas/EditalQueryResult"
              minItems: 0
              maxItems: 2147483647
          required:
            - results
            - pagination
            - sort
    EditalQueryResult:
      description: todo
      type: object
      properties:
        id:
          $ref: "#/components/schemas/EditalId"
        editalNumber:
          type: string
          nullable: false
          minLength: 6
          maxLength: 256
          pattern: "^[0-9]{1,}/[0-9]{4}$"
        validityStartDate:
          type: string
          nullable: false
          minLength: 10
          maxLength: 10
          pattern: '^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$'
        validityEndDate:
          type: string
          nullable: false
          minLength: 10
          maxLength: 10
          pattern: '^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$'
        purpose:
          type: string
          pattern: '^([a-zA-ZÀ-ÿ0-9\s#$%&@\*\(\)\[\]\{\}\-+_=\:;,\.\\\/<>\?\!]){1,8000}$'
          nullable: false
          minLength: 10
          maxLength: 8000
        status:
          $ref: "#/components/schemas/EditalStatus"
      required:
        - id
        - editalNumber
        - validityStartDate
        - validityEndDate
        - purpose
        - status
    # Edital - Request - Post and Put
    EditalRequest:
      description: todo.
      type: object
      properties:
        header:
          $ref: "#/components/schemas/EditalHeader"
          nullable: false
        generalInformation:
          $ref: "#/components/schemas/EditalGeneralInformation"
          nullable: false
        lotDescriptors:
          type: array
          items:
            $ref: "#/components/schemas/EditalLotDescriptor"
          nullable: false
          minItems: 0
          maxItems: 2147483647
        valueCriteriaDescriptors:
          type: array
          items:
            $ref: "#/components/schemas/EditalValueCriteriaDescriptor"
          nullable: false
          minItems: 0
          maxItems: 2147483647
        items:
          type: array
          items:
            $ref: "#/components/schemas/EditalItem"
          nullable: false
          minItems: 0
          maxItems: 2147483647
        distributionCriteriaDescriptors:
          type: array
          items:
            $ref: "#/components/schemas/EditalDistributionCriteriaDescriptor"
          nullable: false
          minItems: 0
          maxItems: 2147483647
        accreditationCriteriaDescriptors:
          type: array
          items:
            $ref: "#/components/schemas/EditalAccreditationCriteriaDescriptor"
          nullable: false
          minItems: 0
          maxItems: 2147483647
      required:
        - header
        - generalInformation
        - lotDescriptors
        - valueCriteriaDescriptors
        - items
        - distributionCriteriaDescriptors
        - accreditationCriteriaDescriptors
    EditalResponse:
      description: todo
      type: object
      allOf:
        - $ref: "#/components/schemas/EditalRequest"
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/EditalId"
    # Edital - Request - Patch
    EditalPatchRequest:
      description: todo
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: "#/components/schemas/EditalEntityKeys"
          nullable: false
          minItems: 1
          maxItems: 10 #Remember to increase this if there is more keys in the enum
        payload:
          $ref: "#/components/schemas/EditalPatchRequestPayload"
          nullable: false
      required:
        - keys
        - payload
    EditalPatchRequestPayload:
      description: todo.
      type: object
      properties:
        header:
          $ref: "#/components/schemas/EditalHeader"
          nullable: true
        generalInformation:
          $ref: "#/components/schemas/EditalGeneralInformation"
          nullable: true
        lotDescriptors:
          type: array
          items:
            $ref: "#/components/schemas/EditalLotDescriptor"
          nullable: true
          minItems: 0
          maxItems: 2147483647
        valueCriteriaDescriptors:
          type: array
          items:
            $ref: "#/components/schemas/EditalValueCriteriaDescriptor"
          nullable: true
          minItems: 0
          maxItems: 2147483647
        items:
          type: array
          items:
            $ref: "#/components/schemas/EditalItem"
          nullable: true
          minItems: 0
          maxItems: 2147483647
        distributionCriteriaDescriptors:
          type: array
          items:
            $ref: "#/components/schemas/EditalDistributionCriteriaDescriptor"
          nullable: true
          minItems: 0
          maxItems: 2147483647
        accreditationCriteriaDescriptors:
          type: array
          items:
            $ref: "#/components/schemas/EditalAccreditationCriteriaDescriptor"
          nullable: true
          minItems: 0
          maxItems: 2147483647
  parameters:
    UserIdParam:
      name: id
      description: todo
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/UserId"
    EditalIdParam:
      name: id
      description: todo
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/EditalId"
  responses:
    400BadRequest:
      description: Bad Request.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
          examples:
            withError400: 
              $ref: "#/components/examples/ResponseWithError400"
    401Unauthorized:
      description: Unauthorized.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
          examples:
            withError401:
              $ref: "#/components/examples/ResponseWithError401"
    403Forbidden:
      description: Forbidden.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    409Conflict:
      description: Conflict.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    500InternalServerError:
      description: Internal Server Error.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    GeneralError:
      description: Unexpected Error.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
  examples:
    UserQueryRequestById:
      summary: Query By id
      description: Exemple of query request by id.
      value:
        {
          "filter": [{ "key": "id", "value": "id1,id2", "operator": "IN" }],
          "pagination": { "pageNumber": 0, "pageSize": 10 },
          "sort": ["name:asc"],
        }
    UserQueryResponseWithoutResults:
      summary: Without Results.
      description: Example of query response without any results.
      value:
        {
          "results": [],
          "pagination":
            {
              "pageNumber": 0,
              "pageSize": 10,
              "totalCount": 0,
              "resultSize": 0,
            },
        }
    UserQueryResponseWithResults:
      summary: With Results.
      description: Example of query response without any results.
      value:
        {
          "results": [{ "id": 1, "name": "User", "email": "user@mail.com" }],
          "pagination":
            {
              "pageNumber": 0,
              "pageSize": 10,
              "totalCount": 1,
              "resultSize": 1,
            },
        }
    UserQueryResponseWithError500:
      summary: Server Error.
      description: Example of server Error.
      value:
        {
          "type": "https://lampp-it/problem/internal-server-error",
          "title": "Internal Server Error",
          "status": 500,
          "detail": "Internal Server Error.",
          "instance": "string",
        }
    ResponseWithError400:
      summary: Client Error.
      description: Example of client Error.
      value:
        {
          "type": "https://lampp-it/problem/client-error",
          "title": "Client Error",
          "status": 400,
          "detail": "Invalid request.",
          "instance": "string",
        }
    ResponseWithError401:
      summary: Client Error
      description: todo
      value: 
        {
          "type": "https://www.lampp-it.com.br/api/problem/security/user-not-authenticated",
          "title": "Not Authenticated",
          "status": 401,
          "detail": "User is not Authenticated.",
          "instance": "string",
        }
    ResponseWithError500:
      summary: Server Error.
      description: Example of server Error.
      value:
        {
          "type": "https://lampp-it/problem/internal-server-error",
          "title": "Internal Server Error",
          "status": 500,
          "detail": "Internal Server Error.",
          "instance": "string",
        }
    UserRequestByNumber:
      summary: User By Number.
      description: Exemple of user request by Number.
      value: {}
    EditalQueryRequestByNumber:
      summary: Query By Number.
      description: Exemple of query request by number.
      value:
        {
          "filter": ["number:'number1,number2':IN_LIKE"],
          "pagination": { "pageNumber": 0, "pageSize": 10 },
          "sort": ["name:asc"],
        }
    EditalResponseById:
      summary: Edital By id.
      description: Exemple of edital request by id.
      value: 
        {
          "header": 
            {
              "id": "6d9c833f-af5c-4d40-b91f-dcf32b5901cd", 
              "editalNumber": 1,
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "industrialSector": {"id": "04d6bbe9-89e9-44b9-9e8c-76503e7bc7c1", "name": "exemplo"}, 
              "status": "current"
            },
          "generalInformation":
            {
              "id": "895b42cb-5e3b-4857-84eb-62ca6ed94398",
              "publishDate": "01/01/2024",
              "officialJournalNumber": 1,
              "officialJournalDate": "1/2024",
              "valueCriteriaType": "SINGLE",
              "lotStrategy": "MULTIPLE",
              "purpose": "exemplo"
            },
            "lotDescriptors": 
              [
                "id": "c4b2345a-4d24-426c-b299-921543b67152",
                "number": 10,
                "description": "texto"
              ],
            "valueCriteriaDescriptors":
              [
                "id": "4db4c350-4ded-4ea3-bc6c-ede416ed358e",
                "geolocations": 
                  [
                    {
                      "id": "18b19421-4577-422b-90dd-2d4ab669e1ea",
                      "type": "COUNTRY"
                    },
                    {
                      "id": "a4722e58-8e76-40c4-9711-420308682b89",
                      "type": "STATE"
                    },
                  ],
              ],
            "items":
              [
                "id": "d868a0b7-388b-43aa-b930-21859f720493",
                "number": 3,
                "description": "exemplo",
                "unit": "exemplo",
                "technicalSpecification": "exemplo",
                "lotDescriptorId": "faca061a-91da-4e4f-874a-90c6967acdfb",
                "proposedValue": 
                  [
                    {
                      "geolocation": {"id": "6ca0464d-9a4a-4564-ae09-b0ea85c4e7e9", "type": "COUNTRY"},
                      "value": 2.2
                    }
                  ],
              ],
            "distributionCriteriaDescriptors":
              [
              
              ],
            "accreditationCriteriaDescriptors":
              [
              
              ],


        }
    EditalRequestByNumber:
      summary: Edital By Number.
      description: Exemple of edital request by number.
      value: { "id": 1, "name": "User", "email": "user@mail.com" }
    EditalQueryResponseWithoutResults:
      summary: Without Results.
      description: Exemple of edital query response without any Results.
      value:
        {
          "results": [],
          "pagination":
            {
              "pageNumber": 0,
              "pageSize": 10,
              "totalCount": 0,
              "resultSize": 0,
            },
          "sort": [],
        }
    EditalQueryResponseWithResults:
      summary: With Results.
      description: Exemple of edital query response with Results.
      value: 
        {
          "results": [
            { 
              "id": "6d9c833f-af5c-4d40-b91f-dcf32b5901cd",
              "editalNumber": "1/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "ATIVO"
            },
             { 
              "id": "18b19421-4577-422b-90dd-2d4ab669e1ea",
              "editalNumber": "2/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "ATIVO"
            },
            { 
              "id": "a0298cfa-e183-4391-a1ce-83d1f92242a1",
              "editalNumber": "3/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "SUSPENSO"
            },
             { 
              "id": "bf0d25b0-2a69-4d03-9e53-3eb4988a18b2",
              "editalNumber": "4/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "SUSPENSO"
            },
             { 
              "id": "da1069a8-119e-43fe-be7e-3cecb24ee9c4",
              "editalNumber": "5/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "SUSPENSO"
            },
             { 
              "id": "6f82a974-0bff-4c8b-b2c5-8f2733ca2d15",
              "editalNumber": "6/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "SUSPENSO"
            },
             { 
              "id": "1cbea7f5-9e7a-437a-9446-39dd06c281cb",
              "editalNumber": "7/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "SUSPENSO"
            },
             { 
              "id": 9,
              "editalNumber": "8/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "SUSPENSO"
            },
             { 
              "id": 10,
              "editalNumber": "9/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "SUSPENSO"
            },
             { 
              "id": 11,
              "editalNumber": "10/2023",
              "validityStartDate": "01/01/2024",
              "validityEndDate": "01/01/2024", 
              "purpose": "exemplo", 
              "status": "SUSPENSO"
            },
          ],
          "pagination":
            {
              "pageNumber": 0,
              "pageSize": 10,
              "totalCount": 1,
              "resultSize": 1,
            },
          "sort": ["name:asc"],
        }
